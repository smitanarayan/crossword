{"version":3,"sources":["logo.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","data","across","6","clue","answer","row","col","8","10","11","15","17","20","22","down","1","2","3","4","5","7","9","12","13","14","16","18","19","21","Page","styled","div","Header","h1","Commands","image","Command","button","CrosswordWrapper","pre","App","crossword","useRef","fillAllAnswers","useCallback","event","current","reset","useState","setMessages","addMessage","message","m","concat","onCrosswordCorrect","isCorrect","JSON","stringify","theme","columnBreakpoint","gridBackground","cellBackground","cellBorder","textColor","numberColor","focusBackground","highlightBackground","src","logo","alt","width","onClick","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.cc154644.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e20e10a6.png\";","import React, { useCallback, useRef, useState } from 'react';\nimport Crossword, {ThemeProvider} from '@jaredreisinger/react-crossword';\nimport styled from 'styled-components';\nimport logo from './logo.png';\n\nconst data = {\n  across: {\n    6: {\n      clue: 'Family of female artists known as \"The Royalty of Negro Vaudeville\" (7, 7)',\n      answer: 'WHITMANSISTERS',\n      row: 6,\n      col: 8,\n    },\n    8: {\n      clue: 'African American brothers known for their showmanship (8, 8)',\n      answer: 'NICHOLASBROTHERS',\n      row: 9,\n      col: 5,\n    },\n    10: {\n      clue: 'Second movement in the Waltz Clog',\n      answer: 'SHUFFLE',\n      row: 11,\n      col: 1,\n    },\n    11: {\n      clue: 'Type of entertainment popular in early 1900s',\n      answer: 'VAUDEVILLE',\n      row: 11,\n      col: 9,\n    },\n    15: {\n      clue: 'Number of films in which Robinson and Temple were cast as a dancing couple',\n      answer: 'FOUR',\n      row: 13,\n      col: 15,\n    },\n    17: {\n      clue: 'Number of choruses in the Shim Sham Shimmy',\n      answer: 'ONE',\n      row: 15,\n      col: 8,\n    },\n    20: {\n      clue: 'Robinson partnered with Temple as the first ..... couple on screen.',\n      answer: 'INTERRACIAL',\n      row: 16,\n      col: 12,\n    },\n    22: {\n      clue: 'First movement in the Waltz Clog',\n      answer: 'LEAP',\n      row: 20,\n      col: 7,\n    },\n  },\n  down: {\n    1: {\n      clue: 'Waltz Clog is seen in the ..... step of the Shim Sham .',\n      answer: 'FOURTH',\n      row: 1,\n      col: 9,\n    },\n    2: {\n      clue: 'Double Shuffle is seen in the ..... step of the Shim Sham.',\n      answer: 'FIRST',\n      row: 2,\n      col: 11,\n    },\n    3: {\n      clue: 'Last name of famous one-legged 1920s tap dancer',\n      answer: 'BATES',\n      row: 2,\n      col: 15,\n    },\n    4: {\n      clue: 'African American female performers had to negotiate issues of race and ..... in the entertainment industry.',\n      answer: 'GENDER',\n      row: 2,\n      col: 19,\n    },\n    5: {\n      clue: 'Fourth step of the Shim Sham',\n      answer: 'HALFBREAK',\n      row: 5,\n      col: 13,\n    },\n    7: {\n      clue: 'Whose birthday was designated as the National Tap Dance Day? (4, 8)',\n      answer: 'BILLROBINSON',\n      row: 8,\n      col: 6,\n    },\n    9: {\n      clue: 'First step of the Shim Sham Shimmy (4, 4)',\n      answer: 'SHIMSHAM',\n      row: 10,\n      col: 2,\n    },\n    12: {\n      clue: 'The Shim Sham Shimmy is considered the national ..... of tap dancers.',\n      answer: 'ANTHEM',\n      row: 11,\n      col: 10,\n    },\n    13: {\n      clue: 'One of the creaters of the Shim Sham Shimmy (7, 4)',\n      answer: 'LEONARDREED',\n      row: 11,\n      col: 16,\n    },\n    14: {\n      clue: 'Second step of the Shim Sham Shimmy',\n      answer: 'CROSSOVER',\n      row: 13,\n      col: 8,\n    },\n    16: {\n      clue: 'Shave and a ..... is a popular break.',\n      answer: 'HAIRCUT',\n      row: 14,\n      col: 20,\n    },\n    18: {\n      clue: 'Number of bars in each step of the Shim Sham',\n      answer: 'EIGHT',\n      row: 15,\n      col: 12,\n    },\n    19: {\n      clue: 'Month in which National Tap Dance day is observed',\n      answer: 'MAY',\n      row: 15,\n      col: 18,\n    },\n    21: {\n      clue: 'Third step of the Shim Sham Shimmy (4, 5)',\n      answer: 'TACKANNIE',\n      row: 16,\n      col: 14,\n    },\n  },\n};\n\nconst Page = styled.div`\n  padding: 1em;\n  >\n`;\n\nconst Header = styled.h1`\n  margin-top: 1em;\n  margin-bottom: 1em;\n  color: #FF5596;\n  font-family: 'Josefin Slab', serif;\n  font-size:30px;\n`;\n\nconst Image = styled.image`\n  display: block'\n`;\n\nconst Commands = styled.div``;\n\nconst Command = styled.button`\n  margin-right: 1em;\n`;\n\nconst CrosswordWrapper = styled.div`\n  margin-top: 1em;\n  max-width: 65em;\n\n  /* and some fun making use of the defined class names */\n\n  .crossword.correct {\n    rect {\n      stroke: #88FFD1 !important;\n    }\n    svg > rect {\n      fill: #88FFD1 !important;\n    }\n    text {\n      fill: black !important;\n    }\n  }\n  \n  .clue {\n    font-size:13px;\n    font-family: 'Roboto', sans-serif;\n  }\n\n  .clue.correct {\n    ::before {\n      content: '\\u2713'; /* a.k.a. checkmark: âœ“ */\n      display: inline-block;\n      text-decoration: none;\n      color: rgb(100, 200, 100);\n      margin-right: 0.25em;\n    }\n\n    text-decoration: line-through;\n    color: rgb(130, 130, 130);\n  }\n`;\n\nconst Messages = styled.pre`\n  background-color: white;\n  margin: 1em 0;\n  padding: 1em;\n`;\n\n\n// in order to make this a more-comprehensive example, and to vet Crossword's\n// features, we actually implement a fair amount...\n\nfunction App() {\n  const crossword = useRef();\n\n  const fillAllAnswers = useCallback((event) => {\n    crossword.current.fillAllAnswers();\n  }, []);\n\n  const reset = useCallback((event) => {\n    crossword.current.reset();\n  }, []);\n\n  // We don't really *do* anything with callbacks from the Crossword component,\n  // but we can at least show that they are happening.  You would want to do\n  // something more interesting than simply collecting them as messages.\n  const [messages, setMessages] = useState([]);\n\n  const addMessage = useCallback((message) => {\n    setMessages((m) => m.concat(`${message}\\n`));\n  }, []);\n\n\n  // onCrosswordCorrect is called with a truthy/falsy value.\n  const onCrosswordCorrect = useCallback(\n    (isCorrect) => {\n      addMessage(`onCrosswordCorrect: ${JSON.stringify(isCorrect)}`);\n    },\n    [addMessage]\n  );\n\n  return (\n\n    <ThemeProvider \n      theme={{\n        columnBreakpoint: '768px',\n        gridBackground: '#ffd5e5',\n        cellBackground: 'white',\n        cellBorder: '#88FFD1',\n        textColor: 'black',\n        numberColor: 'black',\n        focusBackground: '#ffffdd',\n        highlightBackground: '#ffffdd',\n      }}>\n\n    <Page>\n\n    <img src={logo} alt=\"Tap Into History\" width=\"150em\"/>\n      <Header>THE SHIM SHAM SHIMMY CROSSWORD</Header>\n      <Commands>\n        <Command onClick={fillAllAnswers}>Fill all answers</Command>\n        <Command onClick={reset}>Reset</Command>\n      </Commands>\n\n      <CrosswordWrapper>\n        <Crossword\n          data={data}\n          ref={crossword}\n          onCrosswordCorrect={onCrosswordCorrect}\n        />\n      </CrosswordWrapper>\n\n    </Page>\n    </ThemeProvider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}